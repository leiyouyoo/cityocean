{"version":3,"file":"cityocean-amap-library.js","sources":["ng://@cityocean/amap-library/lib/services/amap-http.service.ts","ng://@cityocean/amap-library/lib/services/amap.service.ts","ng://@cityocean/amap-library/lib/component/share-amap/share-amap.component.ts","ng://@cityocean/amap-library/lib/component/template-only/template-only.component.ts","ng://@cityocean/amap-library/lib/amap-library.module.ts","ng://@cityocean/amap-library/lib/services/component-to-html.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpBackend, HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AmapHttpService {\r\n  private http: HttpClient;\r\n\r\n  constructor(private handler: HttpBackend,\r\n              ) {\r\n    this.http = new HttpClient(this.handler);\r\n  }\r\n\r\n  get(url, params?, headers?) {\r\n    return this.http.get(url, { params });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { catchError, map, skip } from 'rxjs/operators';\nimport { AmapHttpService } from './amap-http.service';\ndeclare let AMap: any;\n\nexport interface GeoResult {\n  address_components: AddressComponent[];\n  formatted_address:  string;\n  geometry:           Geometry;\n  place_id:           string;\n  types:              string[];\n}\n\ninterface AddressComponent {\n  long_name:  string;\n  short_name: string;\n  types:      string[];\n}\n\ninterface Geometry {\n  bounds:        Bounds;\n  location:      Location;\n  location_type: string;\n  viewport:      Bounds;\n}\n\ninterface Bounds {\n  northeast: Location;\n  southwest: Location;\n}\n\ninterface Location {\n  lat: number;\n  lng: number;\n}\n\ninterface NetworkLocation {\n  streetAddress: string;\n  tenantName?: string;\n  province?: string;\n  country?: string;\n  city?: string;\n  [PROP_NAME: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AmapService {\n  googleKey = 'AIzaSyAEdT5BA0MmANhrmcnR4QrXu08gLtgvhqI';\n  constructor(private amapHttp: AmapHttpService,\n              ) { }\n  getMarkerByAddressListAMap(addressList: string[], city?) {\n    const option: any = {};\n    if (city) option.city = city;\n    const geocoder = new AMap.Geocoder({});\n\n    return new Observable<{ point: number[][] }[]>(observer => {\n\n      forkJoin(addressList.map(address => {\n        return new Observable<any>(ob => {\n          geocoder.getLocation(address, (status, res) => {\n            let point;\n            if (status !== 'complete') {\n              point = [];\n            } else {\n              const first = res.geocodes[0];\n              point = [first.location.lng, first.location.lat];\n            }\n            ob.next({ point });\n            ob.complete();\n          });\n        })\n      }))\n        .subscribe(res => {\n          observer.next(res);\n          observer.complete();\n        })\n    });\n  }\n\n  getMarkerByLocationList(locationList: NetworkLocation[]) {\n    const option: any = {};\n    return new Observable<{ point: number[] }[]>(observer => {\n\n      forkJoin<GeoResult>(locationList.map(location => {\n        return this.googleGeo(location.streetAddress)\n          .pipe(\n            catchError(o => null)\n          );\n      }))\n        .subscribe((res) => {\n          const results = res.map((result, i) => {\n            let point: number[] = []\n            if (result) {\n              point = [result.geometry.location.lng, result.geometry.location.lat];\n            }\n\n            const location = locationList[i];\n            return {\n              point,\n              icon: 'icon-dingwei',\n              data: location,\n              template: {\n                title: location.tenantName,\n                body: `${[location.streetAddress, location.city, location.province, location.country].filter(o => o).join(', ')}`\n              },\n            }\n          });\n          observer.next(results);\n          observer.complete();\n        })\n    });\n  }\n\n  poi() {\n    var placeSearch = new AMap.PlaceSearch({\n      city: `New York`\n    });\n    placeSearch.search('New York', (status, result) => {\n      // æç´¢æåæ¶ï¼resultå³æ¯å¯¹åºçå¹éæ°æ®\n    })\n  }\n\n    //å°å¾æç´¢å°å\n    mapSearch(input:any): Observable<any> {\n      let url=\"http://47.254.45.110:11045/place/maps/api/place/autocomplete/json\";\n      let params={\n        input,\n        key:\"AIzaSyAEdT5BA0MmANhrmcnR4QrXu08gLtgvhqI\",\n        language:'en'\n      }\n      return this.amapHttp.get(url, params);\n    }\n\n  googleGeo(address): Observable<GeoResult> {\n    // const url = `https://maps.googleapis.com/maps/api/js/GeocodeService.Search?4ssichuan2&7sUS&9szh-CN&callback=_xdc_._s18ps3&key=AIzaSyDIJ9XX2ZvRKCJcFRrl-lRanEtFUow4piM&token=28858`\n    const url = `http://47.254.45.110:11045/geo/maps/api/geocode/json?address=${address}&key=${this.googleKey}`\n\n    return new Observable<GeoResult>(ob => {\n      this.amapHttp.get(url)\n        .subscribe((data: { status: string, results: GeoResult[] }) => {\n          if (data.status === 'OK') {\n            ob.next(data.results[0])\n            ob.complete()\n          } else {\n            ob.error('Empty Geo');\n          }\n        }, error => {\n          ob.error(error);\n        })\n    });\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  Input,\n  TemplateRef,\n  Output,\n  EventEmitter,\n  NgZone, ComponentFactoryResolver, ViewContainerRef,\n} from '@angular/core';\nimport { HttpService } from '@cityocean/common-library';\nimport { AmapHttpService } from '../../services/amap-http.service';\nimport { AmapService } from '../../services/amap.service';\ndeclare let AMap: any;\ndeclare let AMapUI: any;\n\ninterface Marker { img?: string, point: Array<any> }\n\ntype Lines = [number, number][][];\n\ninterface Icon {\n  img?: string,\n  icon?: string,\n  point: Array<any>,\n  template?: { title?: string, body?: string },\n  data?: any,\n}\n\n@Component({\n  selector: 'share-amap',\n  templateUrl: './share-amap.component.html',\n  styleUrls: ['./share-amap.component.less']\n})\nexport class ShareAmapComponent implements OnInit {\n  @Input() height = 800;\n  @Input() width?: number;\n\n  //é»è®¤ç¹æ è®°\n  private _markers: Marker[] = [];\n  @Input() set markers(value: Marker[]) {\n    this._markers = value;\n    this.drawMarkers(this.markers);\n  }\n  get markers(): Marker[] {\n    return this._markers;\n  }\n  @Output() markerClick = new EventEmitter();\n\n  //å¾æ \n  private _icons: Icon[] = [];\n  @Input() set icons(value: Icon[]) {\n    if (!value) return;\n    this._icons = value;\n    setTimeout(() => {\n      this.drawIcons();\n    })\n  }\n  @Output() iconClick = new EventEmitter();\n\n  //çº¿éå\n  private _lines: Lines = [];\n  @Input() set lines(lineList: Lines) {\n    if (!lineList) return;\n    //æµè¯åæ°èµå¼\n    this._lines = lineList;\n    setTimeout(() => {\n      this.drawLine(this._lines);\n    })\n  }\n\n  // èçº¿\n  private _dashedLines: Lines = [];\n  @Input() set dashedLines(val: Lines) {\n    if (!val) return;\n    this._dashedLines = val;\n    setTimeout(() => {\n      this.drawLine(this._dashedLines, { zIndex: 40, strokeStyle: 'dashed', });\n    });\n  }\n  get dashedLines() { return this._dashedLines }\n\n  private _locationList = [];\n  @Input() set locationList(value: any[]) {\n    this._locationList = value;\n    this.getAddressPointAndDraw();\n  }\n  get locationList() { return this._locationList; }\n\n  @ViewChild('ceshiMap', { static: true }) ceshiMap: ElementRef<any>;\n  //çªä½æ¾ç¤ºä¿¡æ¯\n  private _showTemplate: showTemplate;\n  @Input() set setTemplate(showInfo: any) {\n    if (showInfo.body instanceof ElementRef) {\n      showInfo.body = (showInfo.body.nativeElement as Element).innerHTML\n    }\n    this._showTemplate = showInfo;\n  }\n\n  @ViewChild(\"mapUi\", { static: true }) mapUi: ElementRef;\n  private map: any;\n  @ViewChild('compile', { static: true, read: ViewContainerRef }) templateCompile: ViewContainerRef;\n\n  constructor(\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private zone: NgZone,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private http: HttpService,\n    private amapHttpService: AmapHttpService,\n    private amapService: AmapService,\n  ) {\n  }\n\n  ngOnInit() {\n    // google geocoding æµè¯\n/*    this.amapService.googleGeo('New york')\n      .subscribe(data => {\n        console.log(data);\n      })*/\n    setTimeout(() => {\n      return ;\n      this.setTemplate = { title: \"æµè¯ä¿¡æ¯çªä½\", body: this.ceshiMap };\n      this.lines=[[[116.362209, 39.887487],\n      [120.422897,50.878002],\n      [125.372105, 60.90651],\n      [128.428945, 40.89663]], [[130.362209, 41.887487],\n      [129.422897, 45.878002],\n      [130.372105, 46.90651],\n      [135.428945, 50.89663]]];\n      this.markers = [{ img: \"/assets/images/icon_weixin.png\", point: [106.406315, 41.908775] }, { img: \"/assets/images/icon_weixin.png\", point: [116.406315, 39.928775] }];//æµè¯åæ°èµå¼\n      this.icons = [{ img: \"/assets/images/avatar.png\", icon: \"\", point: [106.406315, 41.908775] }, { img: \"/assets/images/avatar.png\", icon: \"\", point: [116.406315, 39.928775] }];//æµè¯åæ°èµå¼\n\n    }, 1000);\n    let id: string = Guid.newGuid();\n    const div = this.mapUi.nativeElement;\n    this.renderer.setAttribute(div, 'id', id);\n    this.renderer.setStyle(div, 'height', this.height + 'px');\n    if (this.width) {\n      div.setStyle(this.el.nativeElement, 'width', this.width + 'px');\n    }\n    this.zone.runOutsideAngular(() => {\n      this.map = new AMap.Map(id, {\n        vectorMapForeign: 'English',//å è½½æµ·å¤ç¢éå°å¾å¹¶æ¾ç¤ºä¸ºä¸­æ English / Local / Chinese_Simplified\n        zoom: 11,//çº§å«\n        resizeEnable: true,\n        //center: [116.397428, 39.90923],//ä¸­å¿ç¹åæ \n        viewMode: '2D'//ä½¿ç¨3Dè§å¾\n      });\n\n      /*setTimeout(() => {\n        this.amapHttpService.get(`https://restapi.amap.com/v3/geocode/geo`, {\n          key: `06f3df8711e756518ba60469be0cbf14`,\n          address: `SKOPJE`,\n          country: `MAKEDONIJA`,\n        })\n          .subscribe(data => {\n            console.log(data);\n          })\n        //æé è·¯çº¿å¯¼èªç±»\n        var driving = new AMap.Driving({\n          map: this.map,\n        });\n        // æ ¹æ®èµ·ç»ç¹ç»çº¬åº¦è§åé©¾è½¦å¯¼èªè·¯çº¿\n        driving.search(new AMap.LngLat(-2.043457, 52.365538), new AMap.LngLat(-1.199698, 51.879038), function(status, result) {\n          // result å³æ¯å¯¹åºçé©¾è½¦å¯¼èªä¿¡æ¯ï¼ç¸å³æ°æ®ç»æææ¡£è¯·åè  https://lbs.amap.com/api/javascript-api/reference/route-search#m_DrivingResult\n          if (status === 'complete') {\n            console.log('ç»å¶é©¾è½¦è·¯çº¿å®æ')\n          } else {\n            console.log('è·åé©¾è½¦æ°æ®å¤±è´¥ï¼' + result)\n          }\n        });\n      }, 3e3)*/\n    });\n    //#region   æ³¨é\n    // AMap.plugin([\"AMap.ToolBar\", \"AMap.Geolocation\", \"AMap.Autocomplete\", \"AMap.PlaceSearch\"], () => {//å¼æ­¥å è½½æä»¶\n    //   let toolbar = new AMap.ToolBar();\n    //   this.map.addControl(toolbar);\n    //   let geolocation = new AMap.Geolocation();\n    //   this.map.addControl(geolocation);\n    //   // å®ä¾åAutocomplete\n    //   let autoOptions = {\n    //     // input ä¸ºç»å®è¾å¥æç¤ºåè½çinputçDOM ID\n    //     input: 'input_id'\n    //   }\n    //   let autocomplete = new AMap.Autocomplete(autoOptions);\n    //   this.map.addControl(autocomplete);\n\n    //   let placeSearch = new AMap.PlaceSearch({ city: \"900000\" });\n    //   //map.addControl(placeSearch);\n    //   //placeSearch.search('åäº¬å¤§å­¦', function (status, result) {\n    //   //  alert(JSON.stringify(result));\n    //   //  // æ¥è¯¢æåæ¶ï¼resultå³å¯¹åºå¹éçPOIä¿¡æ¯\n    //   //})\n    //   AMap.event.addListener(autocomplete, 'select', (e) => {\n    //     //TODO éå¯¹éä¸­çpoiå®ç°èªå·±çåè½\n    //     placeSearch.search(e.poi.name, (status, result) => {\n    //       alert(JSON.stringify(result));\n    //     })\n    //   })\n\n    //   // åå»ºä¸ä¸ª Marker å®ä¾ï¼\n    //   let marker = new AMap.Marker({\n    //     position: new AMap.LngLat(116.39, 39.9),   // ç»çº¬åº¦å¯¹è±¡ï¼ä¹å¯ä»¥æ¯ç»çº¬åº¦ææçä¸ç»´æ°ç»[116.39, 39.9]\n    //     title: 'åäº¬'\n    //   });\n    //   // å¤ä¸ªç¹å®ä¾ç»æçæ°ç»\n    //   let markerList = [marker];\n    //   this.map.add(markerList);\n    // });\n\n    // //å è½½AwesomeMarkerï¼loadUIçè·¯å¾åæ°ä¸ºæ¨¡ååä¸­ 'ui/' ä¹åçé¨å\n    // AMapUI.loadUI(['overlay/AwesomeMarker', 'overlay/SimpleInfoWindow'], (AwesomeMarker, SimpleInfoWindow) => {\n    //   new AwesomeMarker({\n    //     //è®¾ç½®awesomeIcon\n    //     awesomeIcon: 'street-view', //å¯ç¨çiconsåè§ï¼ http://fontawesome.io/icons/\n    //     //ä¸ååæ°ç»§æ¿èªç¶ç±»\n    //     //iconLabelä¸­ä¸è½åå«innerHTMLå±æ§ï¼åé¨ä¼å©ç¨awesomeIconèªå¨æå»ºï¼\n    //     iconLabel: {\n    //       style: {\n    //         color: '#fff' //è®¾ç½®é¢è²\n    //       }\n    //     },\n    //     iconStyle: 'lightblue', //è®¾ç½®å¾æ æ ·å¼\n    //     //åºç¡çMarkeråæ°\n    //     map: this.map,\n    //     position: this.map.getCenter()\n    //   });\n    //   // åå»ºä¸ä¸ª Marker å®ä¾ï¼\n    //   let marker = new AMap.Marker({\n    //     position: this.map.getCenter(),   // ç»çº¬åº¦å¯¹è±¡ï¼ä¹å¯ä»¥æ¯ç»çº¬åº¦ææçä¸ç»´æ°ç»[116.39, 39.9]\n    //     title: 'Center'\n    //   });\n\n    //   // å¤ä¸ªç¹å®ä¾ç»æçæ°ç»\n    //   let markerList = [marker];\n    //   this.map.add(markerList);\n\n    //   //marker ç¹å»æ¶æå¼\n    //   AMap.event.addListener(marker, 'click', () => {\n    //     let infoWindow = new SimpleInfoWindow({\n    //       infoTitle: 'è¿éæ¯æ é¢',\n    //       infoBody: '<p>è¿éæ¯åå®¹ã</p>',\n    //       //åºç¹æåmarkerçå¤´é¨ä½ç½®\n    //       offset: new AMap.Pixel(0, -21)\n    //     });\n    //     //æ¾ç¤ºå¨mapä¸2\n    //     infoWindow.open(this.map, marker.getPosition());\n    //   });\n\n    // });\n\n    // //å è½½PathSimplifierï¼loadUIçè·¯å¾åæ°ä¸ºæ¨¡ååä¸­ 'ui/' ä¹åçé¨å\n    // AMapUI.load(['ui/misc/PathSimplifier'], (PathSimplifier) => {\n    //   if (!PathSimplifier.supportCanvas) {\n    //     alert('å½åç¯å¢ä¸æ¯æ Canvasï¼');\n    //     return;\n    //   }\n    //   //å¯å¨é¡µé¢\n    //    this.initRoute(PathSimplifier);\n    // });\n    //#endregion\n    setTimeout(() => {\n      this.drawMarkers(this.markers);\n    }, 1000);\n  }\n\n  // å®ä¾åç¹æ è®°\n  private addMarker(pointList: Array<number>, img: string) {\n    const marker = new AMap.Marker({\n      position: pointList,\n      map: this.map,\n      // title:\"ddd\",\n      offset: new AMap.Pixel(-13, -30)\n    });\n    // marker.setMap(this.map);\n    // ç¼©æ¾å°å¾å°åéçè§éçº§å«\n    this.map.setFitView(null, false);\n  }\n\n  drawMarkers(markers: Marker[]) {\n    if (!Array.isArray(markers)) return;\n    markers.filter(o => o.point.length).forEach(marker => {\n      this.addMarker(marker.point, '');\n    })\n  }\n  //ç»å¾æ \n  private drawIcons(icons = this._icons) {\n    icons.forEach(i => this.drawIcon(i));\n  }\n  private drawIcon(element) {\n      const pointList = element.point;\n      const icon = element.icon;\n      const showInfo = element.template;\n      const img = element.img;\n      AMapUI.loadUI(['overlay/SimpleMarker', 'overlay/SimpleInfoWindow'], (SimpleMarker, SimpleInfoWindow) => {\n        let imgInfo = {\n          src: img,\n          style: {\n            width: '30px',\n            height: '30px'\n          }\n        }\n          const simpleMarker = new SimpleMarker({\n            iconLabel: '',\n            iconStyle: icon ? '<span class=\"iconfont amapicon ' + icon + '\" ></span>' : imgInfo,\n            //è®¾ç½®åºç¹åç§»\n            offset: new AMap.Pixel(-15, -15),\n            map: this.map,\n            showPositionPoint: true,\n            position: pointList,\n            zIndex: 100\n          });\n        simpleMarker.on('click', () => {\n          this.iconClick.emit(element.data);\n        })\n        // ç¼©æ¾å°å¾å°åéçè§éçº§å«\n        this.map.setFitView();\n\n        if (showInfo) {\n          const infoWindow = new SimpleInfoWindow({\n            infoTitle: \"<strong>\" + showInfo.title + \"</strong>\",\n            infoBody: showInfo.body\n          });\n          //æ¾ç¤ºå¨mapä¸\n          // infoWindow.open(this.map, pointList);\n          //marker ç¹å»æ¶æå¼\n          AMap.event.addListener(simpleMarker, 'mouseover', () => {\n            infoWindow.open(this.map, pointList);\n          });\n          AMap.event.addListener(simpleMarker, 'mouseout', () => {\n            infoWindow.close()\n          });\n        }\n      });\n  }\n\n  //ç»çº¿\n  private drawLine(lines: Lines, options = {}) {\n    //#region\n    //æµè¯ä¼ å\n    //#endregion\n    lines.forEach(pointList => {\n      const polyline = new AMap.Polyline({\n        path: pointList,\n        isOutline: true,\n        outlineColor: '#ffeeff',\n        borderWeight: 2,\n        strokeColor: \"#3366FF\",\n        strokeOpacity: 1,\n        strokeWeight: 4,\n        // æçº¿æ ·å¼è¿æ¯æ 'dashed'\n        strokeStyle: \"solid\",\n        // strokeStyleæ¯dashedæ¶ææ\n        strokeDasharray: [10, 15],\n        lineJoin: 'round',\n        lineCap: 'round',\n        zIndex: 50,\n        ...options,\n      })\n      polyline.setMap(this.map);\n      // ç¼©æ¾å°å¾å°åéçè§éçº§å«\n      this.map.setFitView([polyline]);\n    });\n  }\n\n  private getDOMFromComponent(component, data): Node {\n    const icon = this._componentFactoryResolver.resolveComponentFactory(component);\n    (icon as any).data = data;\n    this.templateCompile.clear();\n    const view = this.templateCompile.createComponent(icon);\n    this.zone.run(() => {\n    });\n    const el = ((view.location.nativeElement as HTMLElement).childNodes as NodeListOf<HTMLElement>)[0].cloneNode(true);\n    this.templateCompile.clear();\n    this.zone.run(() => { });\n    return el;\n  }\n\n  initRoute(PathSimplifier) {\n    //åå»ºç»ä»¶å®ä¾\n    let pathSimplifierIns = new PathSimplifier({\n      zIndex: 100,\n      map: this.map, //æå±çå°å¾å®ä¾\n      getPath: (pathData, pathIndex) => {\n        //è¿åè½¨è¿¹æ°æ®ä¸­çèç¹åæ ä¿¡æ¯ï¼[AMap.LngLat, AMap.LngLat...] æè [[lng|number,lat|number],...]\n        return pathData.path;\n      },\n      getHoverTitle: (pathData, pathIndex, pointIndex) => {\n        //è¿åé¼ æ æ¬åæ¶æ¾ç¤ºçä¿¡æ¯\n        if (pointIndex >= 0) {\n          //é¼ æ æ¬åå¨æä¸ªè½¨è¿¹èç¹ä¸\n          return pathData.name + 'ï¼ç¹:' + pointIndex + '/' + pathData.path.length;\n        }\n        //é¼ æ æ¬åå¨èç¹ä¹é´çè¿çº¿ä¸\n        return pathData.name + 'ï¼ç¹æ°é' + pathData.path.length;\n      },\n      renderOptions: {\n        //è½¨è¿¹çº¿çæ ·å¼\n        pathLineStyle: {\n          strokeStyle: 'red',\n          lineWidth: 6,\n          dirArrowStyle: true\n        }\n      }\n    });\n\n    //è¿éæå»ºä¸¤æ¡ç®åçè½¨è¿¹ï¼ä»ä½ç¤ºä¾\n    pathSimplifierIns.setData([{\n      name: 'è½¨è¿¹0',\n      path: [\n        [100.340417, 27.376994],\n        [108.426354, 37.827452],\n        [113.392174, 31.208439],\n        [124.905846, 42.232876]\n      ]\n    }, {\n      name: 'å¤§å°çº¿',\n      //åå»ºä¸æ¡åæ¬500ä¸ªæå¼ç¹çå¤§å°çº¿\n      path: PathSimplifier.getGeodesicPath([116.405289, 39.904987], [87.61792, 43.793308], 500)\n    }]);\n\n    //åå»ºä¸ä¸ªå·¡èªå¨\n    let navg0 = pathSimplifierIns.createPathNavigator(0.2, //å³èç¬¬1æ¡è½¨è¿¹\n      {\n        loop: true, //å¾ªç¯æ­æ¾\n        speed: 100000\n      });\n    navg0.start();\n  }\n\n  getAddressPointAndDraw() {\n    this.amapService.getMarkerByLocationList(this.locationList)\n      .subscribe(data => {\n        this.drawIcons(data);\n      })\n  }\n}\n\nclass Guid {\n  static newGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      let r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n}\nexport class showTemplate {\n\n  title?: string;\n  body?: ElementRef<any> | string;\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nconst shipmentStatus = {\n  0: 'Seller \\'s Location / Booked',\n  1: 'In Transit to Departure Port',\n  2: 'In Transit to Departure Port',\n  3: 'Departure Port',\n  4: 'In Transit to Arrival Port',\n  5: 'Arrival  port',\n  6: 'In Transit to Final Destination',\n  7: 'Final destination',\n  8: 'Final destination',\n}\n\n@Component({\n  selector: 'lib-template-only',\n  templateUrl: './template-only.component.html',\n  styleUrls: ['./template-only.component.css']\n})\nexport class TemplateOnlyComponent implements OnInit {\n  @ViewChild('shipment', { static: true }) shipmentEl: ElementRef;\n  readonly shipmentStatus = shipmentStatus;\n  shipmentData: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ShareAmapComponent } from './component/share-amap/share-amap.component';\nimport { CommonModule } from '@angular/common';\nimport { TemplateOnlyComponent } from './component/template-only/template-only.component';\nconst component = [\n  ShareAmapComponent,\n  TemplateOnlyComponent,\n]\n\n\n@NgModule({\n  declarations: [...component],\n  imports: [\n    CommonModule,\n  ],\n  exports: [...component],\n  entryComponents: [TemplateOnlyComponent],\n})\nexport class AmapLibraryModule { }\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from '@angular/core';\nimport { TemplateOnlyComponent } from '../component/template-only/template-only.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentToHtmlService {\n\n  constructor(private applicationRef: ApplicationRef,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private injector: Injector,\n  ) {\n  }\n\n  getShipmentTemplate(data) {\n    const factory = this.componentFactoryResolver.resolveComponentFactory(TemplateOnlyComponent);\n    const componentRef = factory.create(this.injector);\n    componentRef.instance.shipmentData = data;\n    this.applicationRef.attachView(componentRef.hostView)\n    componentRef.changeDetectorRef.detectChanges()\n    return {\n      title: data.shipmentNo,\n      body: componentRef.instance.shipmentEl.nativeElement.innerHTML\n    };\n  }\n}\n"],"names":[],"mappings":"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"}